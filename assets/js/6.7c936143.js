(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{355:function(a,t,s){a.exports=s.p+"assets/img/rails1.837cdd52.jpg"},356:function(a,t,s){a.exports=s.p+"assets/img/rails2.1c73f072.png"},357:function(a,t,s){a.exports=s.p+"assets/img/many_to_many.efe9c7be.png"},390:function(a,t,s){"use strict";s.r(t);var r=s(42),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"rails-study-notes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rails-study-notes"}},[a._v("#")]),a._v(" Rails Study Notes "),r("img",{attrs:{src:"https://img.icons8.com/color/48/000000/ruby-programming-language.png"}})]),a._v(" "),r("h2",{attrs:{id:"git-branch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[a._v("#")]),a._v(" Git Branch")]),a._v(" "),r("p",[a._v("처음 레일즈 Application 을 생성하면 디폴트로 "),r("code",[a._v("master branch")]),a._v(" 에서 작업한다. 앞으로 Application 을 개발하면서 우리는 master branch 는 항상 "),r("strong",[a._v("deploy 가능한 상태를 유지")]),a._v("해야 한다.")]),a._v(" "),r("p",[a._v("따라서 새로운 feature 를 추가한다고 가정하면 새로운 "),r("code",[a._v("feature branch")]),a._v(" 를 생성하여 해당 branch 에서 작업을 이어가야 한다. 해당 feature branch 가 구현이 완료되고 테스트를 마치면 master branch 로 merge 된다.")]),a._v(" "),r("h3",{attrs:{id:"branch-생성-예제"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#branch-생성-예제"}},[a._v("#")]),a._v(" Branch 생성 예제")]),a._v(" "),r("p",[a._v("새로운 user model 을 추가하기 위해 아래와 같이 branch 를 생성해주었다.")]),a._v(" "),r("p",[r("img",{attrs:{src:s(355),alt:"rails1"}})]),a._v(" "),r("p",[a._v("branch 가 master 👉새로 생성한 branch 로 바뀐걸 볼 수 있다.")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v("git checkout master\n")])])]),r("p",[a._v("로 다시 master branch 로 돌아갈 수 있다.")]),a._v(" "),r("h3",{attrs:{id:"branch-merge"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#branch-merge"}},[a._v("#")]),a._v(" Branch Merge")]),a._v(" "),r("p",[a._v("새로운 feature 구현을 마쳤다면 다시 master branch 와 merge 해줘야 한다.")]),a._v(" "),r("p",[r("img",{attrs:{src:s(356),alt:"rails2"}})]),a._v(" "),r("p",[a._v("branch 에서 생성한 파일들이 master branch 로 정상적으로 merge 되어진 모습을 볼 수 있다.")]),a._v(" "),r("h2",{attrs:{id:"db-association"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#db-association"}},[a._v("#")]),a._v(" DB Association")]),a._v(" "),r("h3",{attrs:{id:"many-to-many-association"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#many-to-many-association"}},[a._v("#")]),a._v(" Many to Many Association")]),a._v(" "),r("p",[a._v("이번 클론 코딩 프로젝트의 데이터는 Articles Table 과 Categories Table 이 다대다 관계를 가진다.")]),a._v(" "),r("p",[a._v("즉, 하나의 article 은 여러개의 categories 를 가질 수 있고, 하나의 categories 는 여러개의 aritcles 을 가질 수 있다.")]),a._v(" "),r("p",[a._v("따라서 "),r("strong",[a._v("articles_categories")]),a._v(" 라는 "),r("code",[a._v("연결 테이블")]),a._v("을 사용하여 이들의 관계를 설정해 주었다.")]),a._v(" "),r("p",[r("img",{attrs:{src:s(357),alt:"table example"}})]),a._v(" "),r("p",[a._v("이와 관련하여 다음과 같은 테스트를 구현하였다.")]),a._v(" "),r("ol",[r("li",[r("p",[a._v("Unit Tests : 모델에 적용되는 test로 단위별로 validation 등이 잘 적용되는지 테스트")])]),a._v(" "),r("li",[r("p",[a._v("Functional Tests : 컨트롤러에 적용되는 test로, 예를들어 before_action 에 로그인 되지 않은 유저가 특정 불가능해야하는 action 을 수행하지는 않는지 등을 테스트")])]),a._v(" "),r("li",[r("p",[a._v("Integration Tests : Full features, start to finish of a business process. Ex) a user signs up for the app")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);