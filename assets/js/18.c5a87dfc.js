(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{397:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"프로그래머스-level02"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#프로그래머스-level02"}},[s._v("#")]),s._v(" 프로그래머스 Level02")]),s._v(" "),a("h2",{attrs:{id:"큰-수-만들기-👉-greedy-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#큰-수-만들기-👉-greedy-stack"}},[s._v("#")]),s._v(" 큰 수 만들기 👉 Greedy, Stack")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/42883",target:"_blank",rel:"noopener noreferrer"}},[s._v("문제 링크"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level02.%ED%81%B0_%EC%88%98_%EB%A7%8C%EB%93%A4%EA%B8%B0/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[s._v("나의 풀이"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_1-문제정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의"}},[s._v("#")]),s._v(" 1. 문제정의")]),s._v(" "),a("p",[s._v("다음과 같이 string 형태의 숫자가 주어졌을때, k만큼의 숫자를 제외해서 가장 큰 수를 만드는 문제.")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("💁🏻‍♂️ 1번 예제\nNumber = '4177252841' k = 4 일때\n4,1,2,2 를 제외한 '775841' 을 구하는 문제\n")])])]),a("h3",{attrs:{id:"_2-풀이-코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드"}},[s._v("#")]),s._v(" 2. 풀이 & 코드")]),s._v(" "),a("p",[s._v("이 문제에 대한 풀이는 쉽게 떠올릴 수 있다.")]),s._v(" "),a("p",[s._v("예를들어")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("Number = '4177' k = 2 라 가정하면,\n| 4 | 1 | 7 | 7 | 가장 먼저 1을 제외\n| 4 | 7 | 7 | 이 가장 큰 수가 된다. 다음으로 4을 제외하면\n| 7 | 7 | 가장 큰 수가 만들어진다.\n\n즉 맨 앞에서부터 검사해가며 바로 뒤의 숫자보다 작은 숫자를 찾아서 제외하면 된다.\n")])])]),a("p",[s._v("위의 솔루션으로 간단하게 구현하면 "),a("strong",[s._v("시간복잡도 O (N ^ 2)")]),s._v(" 으로 쉽게 구할 수 있다.")]),s._v(" "),a("p",[s._v("하지만, 이 문제에서 요구하는건 한번의 iteration, "),a("strong",[s._v("O (N)")]),s._v(", 으로 해를 구하는것.")]),s._v(" "),a("p",[s._v("일단 최악의 경우를 생각해보자.")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("Number = '999999999999991919' k = 2 에서지\n2개의 1을 찾아내는데 거의 숫자를 k번 처음부터 끝까지 모두 탐색해야 한다.\n")])])]),a("p",[s._v("여기서 스터디 원의 도움을 받았는데 바로 "),a("code",[s._v("스택")]),s._v("을 이용하면 N의 반복으로 해결할 수 있다.")]),s._v(" "),a("p",[s._v("1번 예제로 돌아가보자.")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("4177252841 에서 스택과 삭제한 숫자 개수 deleteCount를 이용해 풀이해보자\n4 칸의 빈 스택을 만들어준다.\n|   |   |   |   | 그 뒤 4개의 숫자를 push\n| 4 | 1 | 7 | 7 | 에서 가장 먼저 1을 pop, deleteCount = 1\n| 4 | 7 | 7 | 2 | 다음 숫자 2 를 push 4를 pop, deleteCount = 2\n| 7 | 7 | 2 | 5 | 5를 push\n... 반복\n\n이와 같이 4개의 숫자를 제외할때 까지 반복해주면 특정 index에서 종료가 되거나\n문자열 끝에 도달시 맨 뒤의 숫자부터 pop 해주면 된다.\n")])])]),a("p",[s._v("위의 풀이대로 풀이해주면 모든 인덱스당 스택에서 제외할 값을 찾기위한 스택의 크기 k 만큼 반복이 진행된다.")]),s._v(" "),a("p",[s._v("즉, 시간복잡도가 "),a("strong",[s._v("O ( k * N ) 에서 k 는 상수 이므로 👉 O ( N )")]),s._v(" 이 된다.")]),s._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점"}},[s._v("#")]),s._v(" 3. 어려웠던 점")]),s._v(" "),a("p",[s._v("스택에 대한 아이디어를 스스로 생각해내지 못했던 점이 많이 아쉽다.")]),s._v(" "),a("p",[s._v("그리디 기법을 사용하는 배열관련 문제에서 N ^ 2 의 탐색이 이루어 지는 상황이 있다면 스택, 큐를 이용하여 풀이 할 수 있는지 생각해보자.")]),s._v(" "),a("h2",{attrs:{id:"타겟-넘버-👉-bfs-dfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타겟-넘버-👉-bfs-dfs"}},[s._v("#")]),s._v(" 타겟 넘버 👉 BFS, DFS")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/43165",target:"_blank",rel:"noopener noreferrer"}},[s._v("문제 링크"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:""}},[s._v("나의 풀이")])]),s._v(" "),a("h3",{attrs:{id:"_1-문제정의-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-2"}},[s._v("#")]),s._v(" 1. 문제정의")]),s._v(" "),a("p",[s._v("다음과 같이 배열이 주어질 때 target 을 만드는 경우의 수를 구하는 문제.")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("numbers = [1, 1, 1, 1, 1] target = 3 이라 가정하면\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n")])])]),a("p",[s._v("총 5가지 경우의 수가 존재한다.")]),s._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-2"}},[s._v("#")]),s._v(" 2. 풀이 & 코드")]),s._v(" "),a("p",[s._v("이 문제는 별수 없이 2 ^ n 의 케이스를 다 따져봐야 한다.")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    ( 0)_ ( 1) _ ( 2) _ ( 3)\n      \\        \\     \\_ ( 1)\n       \\         ( 0) _ ( 1)\n        \\          \\___ (-1)\n         \\                    ... ( 생략 😱 )\n          (-1) _ ( 0) _ ( 1)\n            \\        \\_ (-1)\n             \\__ (-2) _ (-1)\n                     \\_ (-3)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("2행, 3행에서 결과적으로는 같은 1 이지만 지나온 path 가 다르다.")]),s._v(" "),a("ul",[a("li",[s._v("2행 : 1 + 1 - 1")]),s._v(" "),a("li",[s._v("3행 : 1 - 1 + 1")])]),s._v(" "),a("p",[s._v("path 가 다르면 또 다른 경우의 수로 세기 때문에 이 문제의 경우 2 ^ n 의 모든 케이스를 고려해야 한다.")]),s._v(" "),a("p",[s._v("이 문제는 2가지 방법으로 접근해 보았다.")]),s._v(" "),a("ol",[a("li",[s._v("dfs-like solution")])]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sol1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("dfs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" idx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" answer\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("가장 먼저 재귀 호출로 구현. dfs 알고리즘과 유사한 형태로 해를 구한다.")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("bfs-like solution")])]),s._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sol2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lvl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lvl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("lvl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("lvl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        lvl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" curr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("curr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("이 두가지 방법의 차이는 dfs는 위의 그림 기준 "),a("strong",[s._v("1행 2행 3행 순서대로 탐색")]),s._v("이 이루어지고")]),s._v(" "),a("p",[s._v("bfs는 level 순서로, 즉, "),a("strong",[s._v("열 순서대로 탐색")]),s._v("해 나간다.")]),s._v(" "),a("p",[s._v("이 문제는 두가지 방법 중 어떤걸 사용해도 풀이가 가능했지만 만약 문제 조건이 달라지면 어떤 알고리즘을 사용할지 고려해봐야 한다.")]),s._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-2"}},[s._v("#")]),s._v(" 3. 어려웠던 점")]),s._v(" "),a("p",[s._v("레벨 3의 dfs, bfs 알고리즘을 풀이하고 나중에 레벨 2를 도전해서 그런지 이 문제는 별다른 어려움 없이 재미있게 풀이 하였다 😇")]),s._v(" "),a("p",[s._v("어려운 문제도 솔루션을 봐서라도 포기하지말고 한번 풀어보자. 다른 문제가 쉬워진다 👍")])])}),[],!1,null,null,null);t.default=e.exports}}]);