(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{384:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"프로그래머스-level03"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#프로그래머스-level03"}},[t._v("#")]),t._v(" 프로그래머스 Level03")]),t._v(" "),a("h2",{attrs:{id:"n-queen-👉-branch-bound"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n-queen-👉-branch-bound"}},[t._v("#")]),t._v(" N-Queen 👉 Branch & Bound")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/12952",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.N_Queen/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("가로, 세로의 길이가 N 의 크기의 체스판에서 N 개의 퀸을 서로 공격할 수 없는 위치에 배치하는 경우의 수를 구하는 문제")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("이 문제는 tree 형태로 현재 체스판의 상황을 나타내는 노드를 생성하여 "),a("code",[t._v("분기와 한정")]),t._v(" 을 사용하는 다이나믹 프로그래밍의 대표적인 문제중 하나 이다.")]),t._v(" "),a("p",[a("strong",[t._v("FIFO 방식으로 branch")]),t._v(" 를 생성해가며 퀸이 서로 공격할 수 있는 위치에 있을 시 해당 노드를 "),a("strong",[t._v("죽은 노드")]),t._v("로 바꾸는 "),a("strong",[t._v("bound 함수")]),t._v("를 구현하여 풀이하였다.")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("변수에 대한 정의")]),t._v(" "),a("p",[t._v("col 👉 현재 Queen 의 Column 위치를 저장 하는 배열")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("예를들어 col = [1, 2] 일 경우\n| Q |   |\n|   | Q |\nQueen은 위과 같이 위치하게 됩니다.\n")])])]),a("p",[t._v("level 👉 현재 고려하고 있는 Queen의 개수")])]),t._v(" "),a("li",[a("p",[t._v("풀이")]),t._v(" "),a("p",[t._v("큐에는 다음과 같은 자료구조 형태로 level 과 col 에 대한 정보를 저장한다.")]),t._v(" "),a("p",[t._v("Q = | 2 | 1 | 2 | 👉 레벨 : 2 col : [1, 2]")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("p",[a("code",[t._v("TODO")])]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[a("code",[t._v("TODO")])]),t._v(" "),a("h2",{attrs:{id:"섬-연결하기-👉-mst"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#섬-연결하기-👉-mst"}},[t._v("#")]),t._v(" 섬 연결하기 👉 MST")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/42861",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EC%84%AC_%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-2"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("Kruskal's 알고리즘 을 이용하여 Minimum Spanning Tree 를 찾는 문제")]),t._v(" "),a("p",[t._v("가장 핵심은 "),a("code",[t._v("Union-Find")]),t._v(" 기법인데 Spanning Tree 를 구성하면서 node 를 하나씩 그리디 기법으로 추가하면서 Cycle 이 생기는 노드를 제외해 나가는게 핵심 !")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-2"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("최소 가중치 순서대로 sorting 한 후 하나의 edge 씩 순서대로 from, to 노드를 사이클이 생기는지 확인 해가며 추가한다. 이때 union find 가 사용되는데,")]),t._v(" "),a("ol",[a("li",[t._v("find 👉 부모를 찾는다")]),t._v(" "),a("li",[t._v("union 👉 같은 부모는 사이클을 의미 skip, 다른 부모는 사이클이 없음을 의미 union")])]),t._v(" "),a("p",[t._v("set을 이용하여 각자 부모에 해당하는 인덱스를 넣어준다. 예를들어 아래의 경우")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set = {0 : 1, 1 : 2, 2 : -2 }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("0 번 노드의 부모는 1, 1 번 노드의 부모는 2")]),t._v(" "),a("p",[t._v("2 번 노드 👉 음수는 루트 노드를 의미하고 2는 자식이 2개임을 의미")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("find")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 음수가 나올때 까지 (최상위 부모까지) 따라 올라간다")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parent 가 동일할 경우 skip")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parent가 다를 경우 하나의 부모로 통일")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h3",{attrs:{id:"_3-어려웠던-점-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-2"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("부모가 더 많은 자식이 있는 쪽으로 합쳐줘야지 원하는 결과가 나왔음.")]),t._v(" "),a("p",[t._v("아닐 경우에 몇개의 테스트를 통과하지 못했는데 정확한 이유는 아직 모르곘음.")]),t._v(" "),a("h2",{attrs:{id:"단어-변환-👉-dfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#단어-변환-👉-dfs"}},[t._v("#")]),t._v(" 단어 변환 👉 DFS")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/43163",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EB%8B%A8%EC%96%B4_%EB%B3%80%ED%99%98/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-3"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[a("code",[t._v("dfs")]),t._v(" 탐색으로 단어를 하나씩 다른 노드를 찾아 가면서 몇개의 단어를 거쳤는지 최소 값을 찾는 문제")]),t._v(" "),a("p",[t._v("핵심은 현재 단어와 몇개를 거쳤는지 word, count 값을 가지고 dfs 를 구현하는 것")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-3"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" begin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"_3-어려웠던-점-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-3"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("한 글자만 다른 단어를 찾는걸 고민 많이 했는데 그냥 split 해서 하나씩 검사하는 방법으로 구현하였는데 일단 성능 테스트는 통과 하였다. 다른 방법이 있는지는 모르겠다. 😅")]),t._v(" "),a("h2",{attrs:{id:"먼-노드-👉-bfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#먼-노드-👉-bfs"}},[t._v("#")]),t._v(" 먼 노드 👉 BFS")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/49189",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EA%B0%80%EC%9E%A5%EB%A8%BC%EB%85%B8%EB%93%9C/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-4"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("아래와 같이 edge 가 주어지면 1번 노드부터 가장 먼 최단거리 vertex 의 개수를 리턴 하는 문제")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("  edge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("5, 4, 6 노드가 가장 먼 노드들로 결과로 3을 리턴 해야함.")]),t._v(" "),a("p",[a("code",[t._v("BFS")]),t._v(" 탐색으로 모든 노드별로 거리를 구하여 최대 거리에 해당되는 노드의 개수를 구한다.")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-4"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bfs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vertex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" distance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" visited "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vertex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" distance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            graph"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("vertex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("neighbor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("neighbor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("neighbor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" distance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 👉 여기가 if 문 안으로 들어와야 정상 작동 !")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vertex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" neighbor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" distance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" distance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("풀이 도중 원하는 결과가 나오지 않았는데 그 이유는 큐에 푸쉬하는 시점에 visited 를 체크 해줘야 neighbor가 중복이 안 생김.\n다음부터 이 점 유의하여 풀이 해야될듯.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-4"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("이 문제의 경우 그래프에 가중치가 없기 때문에 단순히 bfs 로 지나온 edge 의 개수를 큐에 삽입하면 되지만\n만약 가중치가 있는 그래프의 경우 단순히 bfs 로 풀 수 없을듯.")]),t._v(" "),a("h2",{attrs:{id:"예산-👉-binary-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#예산-👉-binary-search"}},[t._v("#")]),t._v(" 예산 👉 Binary Search")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/43237",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EC%98%88%EC%82%B0/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-5"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("아래와 같이 budgets와 예산 M 이 있을때")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" budgets "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("140")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("485")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("예산 내 최대 상한가액을 구해야함. 위의 경우 127이 최대 상한액이 484의 예산을 필요로 하는 리턴값이 됨.")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-5"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("budgets 을 sorting 한 뒤 예산 중 최대, 최소 값을 구해서")]),t._v(" "),a("p",[t._v("조건 (M을 넘지 않는) 최대 값을 binary search 함.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("dividable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bud"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("위의 함수로 상한액이 예산을 넘지 검사하도록 하고")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" high"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("low "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" high"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dividable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sorted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        low "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        high "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("while 문을 통하여 binary search 를 구현해주었음.")]),t._v(" "),a("p",[a("code",[t._v("시간복잡도")]),t._v(" : N log N (sorting) + log N (bin search) = O (N log N)")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-5"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("ol",[a("li",[t._v("프로그래머스에서 문제 시작전에 이분 탐색의 힌트를 주었기 때문에 쉽게 풀이하였지만 실제 코딩 테스트에서 이 문제가 그냥 주어졌을때 이분탐색을 활용 할 수 있을지에 대한 의문이 있음.")])]),t._v(" "),a("p",[t._v("👉 범위 내에서 특정 값을 찾아야한다면 이분탐색을 고려해보는게 좋을듯 !")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("한 개의 테스트를 계속 통과하지 못하였는데 바로 아래의 경우임.")])]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" low "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("이분탐색의 경우 문제의 해인 "),a("code",[t._v("high")]),t._v(" 변수가 110 ~ 150 내에서 있을때 제대로 된 해를 구할 수 있음.")]),t._v(" "),a("p",[t._v("👉 만약 최대 상한액이 110보다 작아지는 경우 해가 binary search 하려는 범위내에 없기 때문에 예외처리를 해줘야함.")]),t._v(" "),a("h2",{attrs:{id:"여행경로-👉-dfs-경우의-수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#여행경로-👉-dfs-경우의-수"}},[t._v("#")]),t._v(" 여행경로 👉 DFS, 경우의 수")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/43164",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EC%97%AC%ED%96%89%EA%B2%BD%EB%A1%9C/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-6"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("아래와 같이 티켓의 정보가 주어졌을때,")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tickets "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ICN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JFK"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HND"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IAD"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JFK"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HND"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("티켓에 대한 정보를 기준으로 다음과 같은 조건을 만족하는 여행경로에 대한 탐색이 이루어 져야함")]),t._v(" "),a("ol",[a("li",[t._v("만일 가능한 경로가 2개 이상일 경우 알파벳 순서가 앞서는 경로를 return 합니다.")]),t._v(" "),a("li",[t._v("모든 도시를 방문할 수 없는 경우는 주어지지 않습니다.")]),t._v(" "),a("li",[t._v("주어진 항공권은 모두 사용해야 합니다.")])]),t._v(" "),a("p",[t._v("이 문제의 핵심은 주어진 항공권 모두 사용과 문제에는 명시되어 있지 않지만 테스트 케이스에서 중복된 두개의 티켓이 있는 경우가 있기 때문에 풀이가 쉽지 않았다.")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-6"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("조건을 하나씩 따져보면")]),t._v(" "),a("ol",[a("li",[t._v("만일 가능한 경로가 2개 이상일 경우 알파벳 순서가 앞서는 경로를 return 합니다 👉 티켓을 알파벳 순서로 정렬")])]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("tickets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("모든 도시를 방문할 수 없는 경우는 주어지지 않습니다. (전제 조건)")])]),t._v(" "),a("li",[a("p",[t._v("주어진 항공권은 모두 사용해야 합니다 👉 모든 경우에 대한 탐색")])])]),t._v(" "),a("p",[t._v("아래와 같은 여행경로가 있다고 따져볼때")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tickets "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ICN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ICN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BOO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ICN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BOO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("1번 조건만 고려하게 되면 여행경로는")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("ICN 👉 BOO 👉 DOO\n")])])]),a("p",[t._v("가 됩니다. 2번, 3번 조건을 모두 고려하게 된다면 여행경로는")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("ICN 👉 COO 👉 ICN 👉 BOO 👉 DOO\n")])])]),a("p",[t._v("가 됩니다. 이 여행경로가 1,2,3 번 조건을 모두 만족하는 "),a("strong",[t._v("유일한")]),t._v(" 여행경로가 됩니다.")]),t._v(" "),a("p",[a("code",[t._v("모든 경우의 수")])]),t._v(" "),a("p",[t._v("모든 경우의 수에 대한 탐색을 구현해본적이 없어 가장 먼저 기본적인 모든 경우의 수를 공부하였습니다.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("solution")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stack")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("위의 코드에서 핵심은 f 함수를 재귀적으로 호출하여 배열 내부에 없는 요소를 찾아 하나씩 더해준다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("arr = [1, 2, 3] 이라 가정하면 arr.forEach() 에서\nv = 1 일때\n[1] 👉 [1 , 2] 👉 [1, 2, 3]\nv = 2 일때\n[2] 👉 (배열에 없는 1을 찾음) [2, 1] 👉 [2, 1, 3]\n...\n")])])]),a("p",[t._v("와 같이 요소 하나씩 기준으로 없는 요소를 찾아서 하나씩 더해주며 모든 경우의 수에 대한 탐색을 하여 stack.length 가 목표 길이 len을 만족하면 종료한다.")]),t._v(" "),a("p",[t._v("이를 이용하여 문제에 대한 접근 방법을 pseudo-code 로 작성하면 다음과 같다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("sort tickets\ndfs (route : [])\n    if route length equals len\n        quit searching\n\n    get visited object from route\n\n    get end : last element from route\n\n    forEach v of tickets:\n        if (ticket from equals end) and (ticket visitable)\n            dfs(new route)\n")])])]),a("p",[t._v("위와 같이 진행하면 forEach 문 에서 조건을 만족하는 여행지를 찾으면 바로 그 요소를 더해주어 dfs를 재귀 호출한다. 이때 tickets가 정렬되어 있으면 자동으로 알파벳 순으로 방문을 하게 된다.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-6"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("이번 문제는 조건이 상당히 까다로웠다. 2, 3번 조건을 모두 만족하는 경우 중에서 1번 조건을 또 만족해야하기 때문에 접근이 어려웠다.")]),t._v(" "),a("p",[t._v("일반적인 visited 정보만 체크하는 일반적인 dfs 문제와는 다른 문제였다. 일반적인 dfs 알고리즘의 경우 visited 여부만 체크해가면서 target 노드를 향해 깊이 우선 순위 탐색을 진행한다. 하지만 이번 문제의 경우 중복된 티켓 때문에 개수를 확인 해주면서 1,2,3 번 조건을 만족하는 경로를 탐색해야 한다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('위의 예제 티켓 [["ICN", "COO"], ["ICN", "BOO"], ["COO", "ICN"], ["BOO", "DOO"]] 에서\nICN 👉 BOO 👉 DOO 는 기본적인 dfs 알고리즘으로 얻을 수 있는 해답이지만 조건을 만족시키지 않는다\n\n따라서 ICN 👉 BOO 로 선택하는 과정에서 ICN 👉 COO 로 가는 경로가 조건을 만족하는도\n따져봐야 하는 것이다. 이 부분이 가장 까다롭지만 핵심이 된다 ⭐️\n\nICN 👉 COO 👉 ICN 👉 BOO 👉 DOO 는 변형된 dfs 알고리즘으로 문제의 조건을 만족시킨다\n즉, 조건을 만족하는 dfs 알고리즘 경로를 찾기 위해서 모든 경우의 수를 따져봐야 하는 것 이다.\n')])])]),a("p",[t._v("이 문제는 꼭 복습을 해보도록 하자.")]),t._v(" "),a("h2",{attrs:{id:"줄-서는-방법-👉-dp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#줄-서는-방법-👉-dp"}},[t._v("#")]),t._v(" 줄 서는 방법 👉 DP")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/12936",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EC%A4%84_%EC%84%9C%EB%8A%94_%EB%B0%A9%EB%B2%95/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-7"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("다음과 같이 n, k 가 주어지면 1 ~ n 의 숫자를 오름차순 순서대로 나열하는 경우의 수에서 k 번째 경우를 구하는 문제")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("n = 3 , k = 5 라 가정하면 경우의 수는\n[1, 2, 3]\n[1, 3 ,2]\n[2, 1, 3]\n[2, 3, 1]\n[3, 1, 2]\n[3, 2, 1]\n3! 개의 경우의 수가 생기는데 이중 5번째 즉, [3, 1, 2]를 구해내야한다.\n")])])]),a("h3",{attrs:{id:"_2-풀이-코드-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-7"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("ol",[a("li",[t._v("Recursive 경우의 수 알고리즘")])]),t._v(" "),a("p",[t._v("처음 접근 방법은 모든 경우의 수를 구하는 recursive 알고리즘을 사용하였다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Target = [1, 2, 3] 이라 가정하자 (필요한 요소 배열)\n[] 👉 빈 배열에서 시작\n[1] 👉 Target에서 없는 요소를 찾은뒤 1 삽입\n       이 단계에서 [1, 2] [1, 3] ... 순서대로 호출\n[1, 2] 👉 2 삽입\n[1, 2, 3] 👉 3 삽입, k = 1\n[1, 3]\n[1, 3, 2] k = 2\n...\n")])])]),a("p",[t._v("와 같이 진행되고 length 가 n 과 같아지면 회수를 count 하여 k와 같아지면 종료한다.")]),t._v(" "),a("p",[t._v("자 이제 시간 복잡도를 분석해보자. 모든 n개의 요소마다 recursive 하게 다음 요소를 찾는 함수를 호출하므로\n"),a("strong",[t._v("O ( N ^ 2)")]),t._v(".")]),t._v(" "),a("p",[t._v("하지만 별다른 solution 이 없을거라 생각해서 제출했지만 결과는 시간 초과 🤯")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("팩토리얼의 Memoization 패턴 구현")])]),t._v(" "),a("p",[t._v("가장 먼저 한번에 k 번째 경우를 구하기 위해 패턴을 찾기 위해 노력했다. 위의 예제로 돌아가보자")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("총 경우의 수는 3!\narr         k        Order\n[ 1, X, X ] k = 1 👉 0\n[ 1, X, X ] k = 2 👉 0\n\n[ 2, X, X ] k = 3 👉 1\n[ 2, X, X ] k = 4 👉 1\n\n[ 3, X, X ] k = 5 👉 2\n[ 3, X, X ] k = 6 👉 2\n\n자세히 보면 맨 앞의 숫자는 2번 마다 1씩 올라가는 패턴을 볼 수 있다.\n여기서 n 자리 수에 들어가는 값을 구하려면\norder 0, 1, 2 에 따라 [1, 2, 3] 에서 order 번째 작은 수를 뽑아\nn 자리 수에 매핑 해주면 된다.\nOrder 는 다음과 같은 공식으로 구할 수 있다.\n\n1. k - 1 값을 (n - 1)! 으로 나눈 몫 (k - 1 은 최초 1회만 해주면 됨).\n2. 그 다음 k 값은 이때 발생한 나머지\n\n👉 n 번 반복\n")])])]),a("p",[t._v("위의 접근 방법으로 코드를 구현해보면")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" answer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n - 1 의 팩토리얼 값 계산")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" divide "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 몫과 나머지 계산")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("quotient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remainder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" divide"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" divide"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 배열에서 몫 번째 작은 값을 꺼냄")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quotient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 솔루션 배열에 삽입")]),t._v("\n    answer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 다음 k 값은 나머지 값")]),t._v("\n    k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" remainder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("위와 같이 N! * n 번의 반복으로 구해낼 수 있는데 이때 factorial 함수는 반복적인 계산을 수행하기 때문에 아래와 같이 "),a("code",[t._v("memoization")]),t._v(" 패턴으로 구현이 가능하다 (피보나치, 팩토리얼 등에 자주 쓰인다).")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("factorial")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 캐시에 계산 값이 있을 경우 그대로 리턴")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 없을 경우 계산하고 캐시에 저장뒤 리턴")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("위와 같은 패턴으로 시간복잡도를 약 O ( N ) 에 가깝게 줄일 수 있다 "),a("s",[t._v("개인적인 생각으로 정확히는 모르겠음;;")]),t._v(".")]),t._v(" "),a("p",[t._v("어쨋든 모든 테스트 케이스 통과 ~.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-7"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("패턴을 찾는게 살짝 까다로웠음. 최초에 k 에 1을 빼고 계산 하면 되는데 이걸 알아내는데 꽤 오랜 시간일 걸렸음.")]),t._v(" "),a("p",[t._v("어쨋든 이렇게 "),a("strong",[t._v("패턴을 찾아내고 알고리즘을 구현하는 능력")]),t._v("이 필요한 듯하다. 여러가지 접근 방법으로 풀이해볼 수 있어서 좋았던 문제.")]),t._v(" "),a("h2",{attrs:{id:"거스름-돈-👉-dp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#거스름-돈-👉-dp"}},[t._v("#")]),t._v(" 거스름 돈 👉 DP")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/12907",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EA%B1%B0%EC%8A%A4%EB%A6%84%EB%8F%88/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-8"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("n = 특정 금액, money = 동전 조합일 때")]),t._v(" "),a("p",[t._v("n = 5, money = [ 1, 2, 5 ] 라 가정하면, 5 를 만드는 방법의 수는")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("5\n2 2 1\n2 1 1 1\n1 1 1 1 1\n총 : 4가지\n")])])]),a("p",[t._v("가 된다. 이를 구하는게 문제!")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코이"}},[t._v("#")]),t._v(" 2. 풀이 & 코이")]),t._v(" "),a("p",[t._v("이 문제는 사실 스스로 풀이하지 못해서 구글링하여 다음 링크의 풀이을 참고하여 풀이하였다. "),a("a",{attrs:{href:"https://www.zerocho.com/category/Algorithm/post/5b87ccc1553b47001bb08d2b",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고 풀이"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("자 그럼 풀이로 들어가보자")]),t._v(" "),a("p",[t._v("n = 10, money = [ 1, 2, 5 ] 라 가정하자")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |\n\n👉 money : [ 1 ]\n| 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n1원으로 0 ~ 10 까지 만드는 방법은 1가지 뿐이다.\n\n👉 money : [ 1 , 2 ]\n| 1 | 1 | 2 | 2 | 3 | 3 | 4 | 4 | 5 | 5 | 6 |\n1, 2 원으로 0 ~ 10 원을 만드는 방법. 아직까지 패턴을 찾기 힘들다.\n\n👉 money : [ 1, 2, 5 ]\n| 1 | 1 | 2 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 10 |\n자, 여기서 8을 만드는 경우의 수를 보자.\n상식적으로 생각해보면 [ 1 , 2 ] 원에서 5원 동전이 더해졌다.\n분명 [ 1, 2 ] 로 8을 만드는 경우의 수 ( 5 ) + a 이다.\n그렇다면 a 는 2라는 소리다.\n즉, n 원을 만드는 방법은\n1. k - 1 개의 동전으로 n 을 만드는 경우의 수\n2. n - x ( 새로 추가된 동전 ) 원 만드는 경우의 수\n3. n - 2*x 원 만드는 경우의 수\n... 이 된다.\n")])])]),a("p",[t._v("코드로 작성해보자.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" money")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 초기화")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                cache "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" cache "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" coin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"어려웠던-점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#어려웠던-점"}},[t._v("#")]),t._v(" 어려웠던 점")]),t._v(" "),a("p",[t._v("이 문제를 풀다가 이 코드를 스스로 생각해내기 전까지 많은 연습이 필요할거 같다는 생각이 들었다.")]),t._v(" "),a("p",[a("strong",[t._v("dp 에서는 하나의 해가 다른 해의 영향을 미친다는걸 꼭 기억하자. 이 관계식을 찾아내자")])]),t._v(" "),a("h2",{attrs:{id:"저울-👉-greedy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#저울-👉-greedy"}},[t._v("#")]),t._v(" 저울 👉 Greedy")]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-9"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("다음과 같이 추의 무게들이 주어질 때,")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("weight = [ 1, 1, 2, 3, 6, 7, 30 ]\n")])])]),a("p",[t._v("이 무게들로 만들 수 없는 최소 무게를 구하는 문제")]),t._v(" "),a("h3",{attrs:{id:"_2-풀이-코드-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-8"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/42886",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EC%A0%80%EC%9A%B8/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("가장 먼저 무게를 sorting 한다.")]),t._v(" "),a("p",[t._v("위의 weight 들을 iterate 하면서 각 인덱스별로 만들 수 있는 최대 무게를 구한다.\n이때 현재 고려중인 max 값에 weight [i] 를 더 했을때")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("i = 0 [ 1 ]\nmax = 1\n\ni = 1 [ 1 , 1 ]\nmax = 1 + 1\n\ni = 2  [ 1, 1, 2 ]\nmax = 2 + 2\n\ni = 3 [ 1, 1, 2, 3 ]\nmax = 4 + 3\n\ni = 4 [ 1, 1, 2, 3, 6 ]\nmax = 7 + 6\n\ni = 5 [ 1, 1, 2, 3, 6, 7 ]\nmax = 13 + 7\n\ni = 6 [ 1, 1, 2, 3, 6, 7, 30 ]\n자 여기서 분석해보자. 이전 max 값은 20. 즉 1 ~ 20 의 수를 모두 만들 수 있다.\n그렇다는 뜻은 이후 weight[ i ] 가 최대 20 까지 모든 수를 커버하여\n21, 22, 23 ... 40 을 만들 수 있다. 즉 범위가 1 ~ 40으로 늘어난다.\n하지만 다음 무게가 21 이라면? 👉 만들 수 없다 🙅🏻‍♂️\n")])])]),a("p",[t._v("자 이제 코드로 구현 해보자.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            answer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("w\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" answer\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("만약 answer 가 현재 고려중인 weight 보다 작아지면 👉 더 이상 만들 수 없다.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-8"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("그냥 어려웠다. 풀이가 생각보다 간단해서 당황했던 문제.")]),t._v(" "),a("p",[t._v("이 문제와 바로 위의 문제 거스름 돈 문제와 공통점은 하나의 step 이 다음 step 에 영향을 준다는 점.")]),t._v(" "),a("p",[t._v("상관 관계를 파악하는 연습이 필요할 듯 하다.")]),t._v(" "),a("p",[t._v("이 문제는 내 머리로 도저히 떠오르지가 않는다. 여러번 봐서 익숙해져야지.")]),t._v(" "),a("p",[t._v("꼭 복습해보자")]),t._v(" "),a("h2",{attrs:{id:"멀리뛰기-👉-dp-fib"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#멀리뛰기-👉-dp-fib"}},[t._v("#")]),t._v(" 멀리뛰기 👉 DP, Fib")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmers.co.kr/learn/courses/30/lessons/12914",target:"_blank",rel:"noopener noreferrer"}},[t._v("문제 링크"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/DKU-STUDY/Algorithm/blob/master/programmers/%EB%82%9C%EC%9D%B4%EB%8F%84%EB%B3%84/level03.%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/JeongShin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("나의 풀이"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-문제-정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제-정의"}},[t._v("#")]),t._v(" 1. 문제 정의")]),t._v(" "),a("p",[t._v("효진이는 1칸 또는 2칸을 뛸 수 있다. 이때 n 만큼의 거리를 뛰는 모든 경우의 수를 구하는 문제.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("n = 4 라 가정하면\n| 1 | 1 | 1 | 1 |\n| 1 | 1 | 2 |\n| 1 | 2 | 1 |\n| 2 | 1 | 1 |\n| 2 | 2 |\n총 5가지의 방법이 존재한다.\n")])])]),a("h3",{attrs:{id:"_2-풀이-코드-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-9"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("이 문제는 피보나치의 수열을 이용하여 해를 구하는 문제.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("아주 전형적인 피보나치 수열 문제이다.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-9"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("일단 이렇게 모든 경우의 수를 구하는 문제가 주어지면 일단 경우의 수를 몇가지 구해서 패턴을 찾아내자.")]),t._v(" "),a("p",[t._v("요즘 항상 느끼는게 solution을 구할때 일정한 패턴을 찾아내는게 가장 중요한거 같다.")]),t._v(" "),a("p",[t._v("피보나치 수열이라는 이아디어만 얻으면 구현은 아주 쉽다.")]),t._v(" "),a("h2",{attrs:{id:"불량-사용자-👉-dfs-combination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#불량-사용자-👉-dfs-combination"}},[t._v("#")]),t._v(" 불량 사용자 👉 DFS, Combination")]),t._v(" "),a("h3",{attrs:{id:"_1-문제정의-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-문제정의-10"}},[t._v("#")]),t._v(" 1. 문제정의")]),t._v(" "),a("p",[t._v("다음과 같이 응모자 아이디 (user_id)와 제재 아이디(banned_id) 가 있다.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("User_id")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Banned_id")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("frodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("fr*d*")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("crodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("*rodo")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("abc123")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("******")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("frodoc")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("******")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("fradi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("p",[t._v("이때 * 은 아이디를 가리기 위한 목적으로\n예를들어 fr*d* 에는 frodo와 fradi 가 될 수 있습니다.")]),t._v(" "),a("p",[t._v("이때 banned_id 에 해당하는 아이디를 만들 수 있는 경우의 수를 구하는 문제. 단, 중복은 허용되지 않음. 위의 경우에는")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("ID fr*d* > *rodo > ****** > ****** 일때\n1. frodo > crodo > abc123 > frodoc\n2. fradi > crodo > abc123 > frodoc\n3. fradi > frodo > abc123 > frodoc 이 될 수 있음.\n총 3가지 경우의 수를 리턴해야함.\n\n이때 frodo > crodo > frodoc > abc123 도\n답이 될 수 있지만 1번과 중복이 발생하므로 고려하지 않음.\n")])])]),a("h3",{attrs:{id:"_2-풀이-코드-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-풀이-코드-10"}},[t._v("#")]),t._v(" 2. 풀이 & 코드")]),t._v(" "),a("p",[t._v("가장 먼저 각 banned_id 로 부터 가능한 user_id를 구해서 possible_id에 저장해주었다.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regEx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\*/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("위와 같이 * 에 해당하는 자리에 모든 문자가 가능하도록 바꿔준 뒤 ^, $를 통하여 정확한 자리수 까지 확인 해준다.")]),t._v(" "),a("p",[t._v("아래와 같이 possible_id 를 구해주었다.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("fr*d*")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("*rodo")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("******")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("******")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("frodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("crodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("abc123")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frodoc")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("fradi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frodoc")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("abc123")])])])]),t._v(" "),a("p",[t._v("이제 dfs 알고리즘을 이용해서 각 banned_id 별로 possible_id 를 기반으로 하나씩 매핑해보면")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("fr*d*")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("*rodo")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("******")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("******")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("frodo")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("crodo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("abc123")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frodoc")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("fradi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("s",[t._v("frodo")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frodoc")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("s",[t._v("abc123")])])])])]),t._v(" "),a("p",[t._v("1열에서 가령 frodo 가 선택되면 2열 에서는 frodo를 제외시켜준다. 3,4열도 마찬가지.")]),t._v(" "),a("p",[t._v("따라서 이때까지 골라온 id를 stack 이라는 배열에 저장해준다고 가정하면 stack 에 없는 요소를 possible_id에서 찾아 배열에 추가해주면 된다.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("combination")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" idx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkPossibleAnswer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 중복발생 방지")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    possible_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("combination")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("함수명은 dfs 알고리즘과 유사하지만 목적이 경우의 수를 구하는거기 때문에 combination으로 정해주었다.")]),t._v(" "),a("p",[t._v("변수 idx를 이용하여 몇번째 행을 고려중인지 재귀적으로 전달한다.")]),t._v(" "),a("p",[t._v("이제 여기서 문제가 되는건 idx === len 이 되는 시점, 즉, 모든 아이디가 매핑이 된 시점에 현재 stack 이 중복이 되는가에 대한 검사가 필요하다. 예를들어")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("frodo > crodo > abc123 > frodoc\nfrodo > crodo > frodoc > abc123 은 중복된 해답이기 때문에 둘중 하나만 고려해야한다.\n")])])]),a("p",[t._v("따라서 JS Set 을 이용하여 stack을 알파벳 순으로 sort 한 뒤 Set에 add 해주어 해결하였다.")]),t._v(" "),a("p",[t._v("문자열을 sorting 하여 조인하게되면 중복된 경로가 있을 경우 같은 문자열을 반환하고 Set은 중복을 허용하지 않기 때문에 중복을 방지할 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"_3-어려웠던-점-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-어려웠던-점-10"}},[t._v("#")]),t._v(" 3. 어려웠던 점")]),t._v(" "),a("p",[t._v("경우의 수 문제에서 크게 Combination과 Permutation 을 알고 차이점을 이해할 필요가 있다.")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Combination")])]),t._v(" "),a("ul",[a("li",[t._v("조합을 구한다. 따라서 [1, 2, 3], [1 , 3 , 2] 는 같은 경우가 된다. 즉, "),a("strong",[t._v("뽑는 순서가 중요 ❌")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Permutation")])]),t._v(" "),a("ul",[a("li",[t._v("순열을 구한다. 따라서 [1, 2, 3], [1, 3, 2] 는 다른 경우이다. 즉, "),a("strong",[t._v("뽑는 순서가 중요 ⭕️")])])])])]),t._v(" "),a("p",[t._v("이 문제에선 1번 조합 문제에 해당되고 sorting 을 이용하여 중복을 확인하였지만 soring은 시간복잡도가 n log n 꽤나 무거운 작업 이기 때문에 확실히 좋은 solution은 아니라 생각된다.")]),t._v(" "),a("p",[t._v("조합을 구하는 알고리즘에 대해 다시 공부할 필요가 있음.")])])}),[],!1,null,null,null);s.default=r.exports}}]);