(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{404:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"자바-객체지향의-원리와-이해"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바-객체지향의-원리와-이해"}},[t._v("#")]),t._v(" 자바 객체지향의 원리와 이해")]),t._v(" "),a("h2",{attrs:{id:"객체-지향-설계-5원칙-solid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#객체-지향-설계-5원칙-solid"}},[t._v("#")]),t._v(" 객체 지향 설계 5원칙 - SOLID")]),t._v(" "),a("p",[t._v("좋은 소프트웨어 설계를 위해서는 결합도 (coupling) 은 낮추고 응집도 (cohension) 은 높이는 것이 바람직하다.")]),t._v(" "),a("p",[t._v("SOLID 의 개념 또한 High Cohension 응집력을 높이고 Loose Coupling 결합도를 낮추는 관점에서 지속적으로 재정립된 것이다.")]),t._v(" "),a("p",[a("code",[t._v("결합도")]),t._v("는 모듈(클래스)간의 상호 의존정도로써 결합도가 낮으면 모듈간의 "),a("strong",[t._v("상호 의존성")]),t._v("이 줄어들어 객체의 재사용이나 수정, 유지보수가 용이하다.")]),t._v(" "),a("p",[a("code",[t._v("응집도")]),t._v("는 하나의 모듈 내부에 존재하는 구성 요소들의 기능적 관련성으로, 응집도가 높은 모듈은 "),a("strong",[t._v("하나의 책임에 집중")]),t._v("하고 독립성이 높아져 재사용이나 기능의 수정, 유지보수가 유리하다.")]),t._v(" "),a("p",[t._v("SOLID는 객체지향 프로그램을 구성하는 속성, 메서드, 클래스, 객체, 패키지, 모듈, 라이브러리, 프레임워크, 아키텍쳐 등 다양한 곳에 적용된다. SOLID 는 눈에 보이는 제품은 아니다 우리가 만드는 제품에 녹여내야 하는 개념이다.")]),t._v(" "),a("h3",{attrs:{id:"srp-single-responsibility-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#srp-single-responsibility-principle"}},[t._v("#")]),t._v(" SRP - Single Responsibility Principle")]),t._v(" "),a("blockquote",[a("p",[t._v("어떤 클래스를 변경해야 하는 이유는 오직 하나뿐이여야 한다.")])]),t._v(" "),a("p",[t._v("단일 책임 원칙을 위반하는 사례를 몇가지 보자.")]),t._v(" "),a("ol",[a("li",[t._v("한 클래스에 다양한 클래스가 의존하는 경우")])]),t._v(" "),a("p",[t._v("한 남자의 예로 다음과 같은 의존성이 있다고 가정하면")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("어머니 👉 남자 (아들 역할)\n직장상사 👉 남자 (사원 역할)\n소대장 👉남자 (소대원 역할)\n")])])]),a("p",[t._v("남자라는 클래스에 너무나도 많은 역할과 책임이 있다. 따라서 이런 경우 역할과 책임을 다음과 같이 분리할 수 있다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("어머님 👉 아들 (아들 역할)\n직장상사 👉 사원 (사원 역할)\n소대장 👉 소대원 (소대장)\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("한 속성이 여러 의미를 가지는 경우")])]),t._v(" "),a("p",[t._v("데이터베이스에서 가령 한 필드에 있어 토지인 경우 면적을, 건물인 경우 층수를 나타내는 테이블이 있다고 가정하자.\n이 데이터를 사용할 때마다 if 문을 이용하여 건물인지 토지인지 확인해야 한다.")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("메서드에서 단일 책임이 지켜지지 않는 경우")])]),t._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 늑대 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" 수컷 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" 암컷 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" 성별"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 일과수행"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("성별 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 수컷"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 먹이를 사냥한다.")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 새끼들을 돌본다.")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("늑대 클래스에 일과수행 메서드는 성별에 따라 행위가 달라지고 있다. if 문이 존재할 경우 단일 책임 원칙을 위반하는가 의심해볼 필요가 있다.")]),t._v(" "),a("p",[t._v("아래와 같이 SRP에 맞게 리팩토링 해보자.")]),t._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 늑대 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 일과수행 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 수컷늑대 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" 늑대 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 일과수행"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 먹이를 사냥한다")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 암컷늑대 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" 늑대 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 일과수행"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 새끼들을 돌본다.")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("어플리케이션의 경계를 정하고 추상화를 통해 클래스를 선별하고 속성과 메서드를 설계할 때 반드시 단일 책임 원칙을 고려하는 습관을 들이자.")]),t._v(" "),a("h3",{attrs:{id:"ocp-open-closed-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ocp-open-closed-principle"}},[t._v("#")]),t._v(" OCP - Open Closed Principle")]),t._v(" "),a("blockquote",[a("p",[t._v("자신의 확장에는 열려 있고, 주변의 변화에 대해서는 닫혀 있어야 한다.")])]),t._v(" "),a("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuG8oIb8LbDxsJ7YzV8c2Prv9Qb5QOdAgaa9YiO9JQ2HC_jNMDK3vrzrRNdVlVBEyySti2M0L1OOm1QytRtapjGDJWH7SXhuTR-REUBDWmfkcDM_cBON86dC1xL3GrRL3OHeXc8PSRzeclEwU0UQ1HAqK84vvEtN6w-ubN0wfUIb0Rm00",alt:"uml diagram"}}),t._v(" "),a("p",[t._v("가령 편의점에서 편의점 직원은 근본적으로 판매라는 행위에 있어서 손님이 누가되든 판매자가 누가되든 행위 자체에는 어느 영향도 받지 않는다.")]),t._v(" "),a("p",[t._v("따라서 주변의 변화에 손님의 구매 행위에는 영향을 받지 않고 직원은 교대를 통하여 확장에 열려있다.")]),t._v(" "),a("p",[t._v("OCP를 따르지 않으면 유연성, 재사용서으 유지보수성에 불리할 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"lsp-liskov-substitution-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lsp-liskov-substitution-principle"}},[t._v("#")]),t._v(" LSP - Liskov Substitution Principle")]),t._v(" "),a("blockquote",[a("p",[t._v("서브 타입은 언제나 자신의 기반 타입 (base type)으로 교체할 수 있어야 한다.")])]),t._v(" "),a("blockquote",[a("p",[t._v("하위 클래스의 인스턴스는 상위형 객체 참조 변수에 대입해 상위 클래스의 인스턴스 역할을 하는데 문제가 없어야 한다.")])]),t._v(" "),a("p",[t._v("객체 지향의 상속은 다음 조건을 만족해야 한다.")]),t._v(" "),a("ul",[a("li",[t._v("하위 클래스 is a kind of 상위 클래스 - 하위 분류는 상위 분류의 한 종류이다.")]),t._v(" "),a("li",[t._v("구현 클래스 is able to 인터페이스 - 구현 분류는 인터페이스할 수 있어야 한다.")])]),t._v(" "),a("p",[t._v("즉, 객체지향에서 상속은 조직도나 계층도가 아닌 분류도가 되어 한다.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("아버지 춘향이 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("딸")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("위의 경우 딸이 아버지를 상속 받아 아버지 - 딸 구조 (조직도, 게층도). 이때 춘향이는 아버지의 행위 (메서드) 를 할 수 있어야 하는데 상당이 어색함이 느껴진다.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("동물 뽀로로 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("펭귄")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("펭귄이 동물을 상속 받아 동물 - 펭귄 구조 (분류도). 이때 뽀로로는 동물의 역할을 문제 없이 수행할 수 있다.")]),t._v(" "),a("p",[t._v("따라서 상속이 잘못되는 경우 LSP를 위반 할 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"isp-interface-segregation-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isp-interface-segregation-principle"}},[t._v("#")]),t._v(" ISP - Interface Segregation Principle")]),t._v(" "),a("blockquote",[a("p",[t._v("클라이언트는 자신이 사용하지 않는 메서드에 의존 관계를 맺으면 안 된다.")])]),t._v(" "),a("p",[t._v("위의 SRP에서 남자의 역할에 따라 남자 클래스틑 토막내어 하나의 역할과 책임을 가지는 다수의 클래스로 분할 하였다. 하지만 이에 대한 다른 구현으로 ISP가 사용될 수 있다.")]),t._v(" "),a("p",[t._v("남자의 역할을 클래스를 분리하여 토막내는것이 아닌 인터페이스를 제한하여 구현하는것도 가능하다. 예를들어 어머니와 관계에서는 아들 인터페이스로 제한하고 직장 상사와의 관계에서는 사원 인터페이스 등등.. 의 형식으로 인터페이스 분할 원칙을 적용할 수 있다.")]),t._v(" "),a("p",[t._v("결과적으로 같은 문제를 두고 SRP 와 ISP는 두 가지 해결책이라 볼 수 있다. 이는 프로젝트 요구사항이나 설계자 취향에 따라 선택해서 설계할 수 있지만 가급적 단일 책임 원칙을 적용하는 것이 더 좋은 해결책이다.")]),t._v(" "),a("p",[t._v("ISP에서 집고 넘어가야 할 개념중 하나가 바로 "),a("code",[t._v("인터페이스 최소주의 원칙")]),t._v(" 이다. 이는 인터페이스를 통해 메서드를 외부에 제공할 때는 "),a("strong",[t._v("최소한의 메서드만 제공")]),t._v("하라는 원칙이다.")]),t._v(" "),a("p",[t._v("상속과 인터페이스에서 상위 클래스는 풍성할수록 좋고 인터페이스는 작을수록 좋다고 했고 LSP에 따라 하위 객체는 상위 객체인 척 할 수 있다. 따라서 인터페이스는 그 역할에 충실한 최소한의 기능만 공개해야 한다.")]),t._v(" "),a("p",[t._v("따라서 인터페이스는 ~할 수 있는 (is able to)의 기준으로 만드는 것이 좋다.")]),t._v(" "),a("h3",{attrs:{id:"dip-dependency-inversion-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dip-dependency-inversion-principle"}},[t._v("#")]),t._v(" DIP - Dependency Inversion Principle")]),t._v(" "),a("blockquote",[a("p",[t._v("고차원 모듈은 저차원 모듈에 의존하면 안 된다. 이 두 모듈 모두 다른 추상화된 것에 의존해야 한다.")])]),t._v(" "),a("blockquote",[a("p",[t._v("추상화된 것은 구체적인 것에 의존하면 안 된다. 구체적인 것이 추상화된 것에 의존해야 한다.")])]),t._v(" "),a("p",[t._v("예를들어 자동차와 스노우 타이어 사이의 관계를 살펴보자.")]),t._v(" "),a("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuKhEIImkLb1wCs_2w_wPRpQiK598B5P8JYo2ItGjUTswuysi3M-R6zxCtV9csXQmYk8IBYwWAWLTNJiGso4rBmLe6W00",alt:"uml diagram"}}),t._v(" "),a("p",[t._v("자동차는 스노우 타이어에 의존한다. 하지만 스노우 타이어는 계절이 변함에 따라 지속적으로 교체 되어야한다. 즉, 스노우타이어가 일반 타이어로 교체 될때마다 자동차는 그 영향에 노출되어 있다.")]),t._v(" "),a("p",[t._v("이에 의존 역전 원칙 DIP를 적용해보자.")]),t._v(" "),a("img",{attrs:{src:"https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuKhEIImkLb1wCs_2w_wPRpQiK598B5P8JYpYoimhIIrAIqnELL1wszpmPkwMDzEsW2KpuNgwbhnktV5crWPK-H93k8AvUrvlc84cQmIJVRLbujl-jMYonbn0knLqTUs0rcGgsEZfWOo3CenW36CkXzIy5A3h0G00",alt:"uml diagram"}}),t._v(" "),a("p",[t._v("위와 같이 DIP 리팩토링을 통하여 더 이상 자동차는 타이어 변화에 영향을 받지 않는다.")]),t._v(" "),a("p",[t._v("이처럼 자신보다 변하기 쉬운 것에 의존하던 것을 추상화된 인터페이스나 상위 클래스를 두어 변하기 쉬운 것의 변화에 영향받지 않게 하는 것이 의존 역전 원칙이다.")]),t._v(" "),a("h3",{attrs:{id:"solid-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solid-summary"}},[t._v("#")]),t._v(" SOLID - Summary")]),t._v(" "),a("ul",[a("li",[t._v("SRP : 어떤 클래스를 변경하는 이유는 하나뿐")]),t._v(" "),a("li",[t._v("OCP : 자신의 확장에는 열려 있고, 주변의 변화에는 닫혀있다.")]),t._v(" "),a("li",[t._v("LSP : 서브타입은 언제나 자신의 기반 타입으로 교체할 수 있어야 한다.")]),t._v(" "),a("li",[t._v("ISP : 클라이언트는 자신이 사용하지 않는 메서드에 의존 관계를 맺으면 안 된다.")]),t._v(" "),a("li",[t._v("DIP : 자신보다 변하기 쉬운껏에 의존하지 마라.")])]),t._v(" "),a("h2",{attrs:{id:"스프링이-사랑한-디자인-패턴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#스프링이-사랑한-디자인-패턴"}},[t._v("#")]),t._v(" 스프링이 사랑한 디자인 패턴")]),t._v(" "),a("p",[t._v("객체지향 4대원칙, 설계 원칙(SOLID), 디자인 패턴을 요리에 비유해보자.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("요리")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("OOP")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("요리도구")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4대 원칙")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("요리도구 사용법")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("설계 원칙")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("레시피")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("디자인 패턴")])])])]),t._v(" "),a("h3",{attrs:{id:"adapter-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adapter-pattern"}},[t._v("#")]),t._v(" Adapter Pattern")]),t._v(" "),a("p",[t._v("다음 예제는 dofactory 라는 온라인 사이트에서 참고한 Adapter 를 사용한 자바스크립트 코드 예제이다.\n어댑터 패턴은 변환기라고 할 수 있다. 즉, 두 인터페이스 사이에 통신이 가능하게 해준다.")]),t._v(" "),a("p",[t._v("Adapter 패턴은 아래와 같은 구조를 가지는데")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Client 👉 Adapter 👉 Adaptee\n")])])]),a("p",[t._v("먼저 Adapter 개념을 사용하지 않는 예제를 보자.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Shipping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("request")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("보내는 우편번호"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 받는 우편번호"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 무게")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// calculate price")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" shipping "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shipping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" shipping"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 우편번호"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 우편번호"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("이제 Adapter 를 사용하여 리팩토링 해보자.")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Shipping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("login")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("certifi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("호출 당하는 쪽의 메서드를 호출하는 쪽의 코드에 대응하도록 중간에 변환기를 통해 호출하는 패턴")])]),t._v(" "),a("h3",{attrs:{id:"singleton-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#singleton-pattern"}},[t._v("#")]),t._v(" Singleton Pattern")]),t._v(" "),a("p",[t._v("싱글턴 패턴이란 인스턴스를 하나만 만들어 사용하기 위한 패턴이다. 커넥션 풀, 스레드 풀, 디바이스 설정 등과 같은 경우 인스턴스를 여러 개 만들게 되면 불필요한 자원을 사용하게 되고 프로그램이 예상치 못한 결과를 낳을 수 있지만, 싱글턴 패턴은 오직 인스턴스를 하나만 만들고 이를 재사용한다.")]),t._v(" "),a("p",[t._v("JS Code")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" singletonObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" singletonInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//some codes")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//other codes")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfunc1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tfunc2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" f2\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("singletonInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tsingletonInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" singletonInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("singletonInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tsingletonInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("p",[t._v("위와 같이 클라이언트에서 create 메서드에는 접근하지 못하게 private으로 getInstance 메서드는 public 으로 구현하여")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" singletonObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("다음과 같이 인스턴스를 생성할 수 있다. 싱글톤은 race condition에 영향을 받기 쉽기 때문에 동기화에 신경써야 한다.")]),t._v(" "),a("p",[t._v("JAVA Code")]),t._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" singletonObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 정적 참조 변수")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// private 생성자")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 객체 반환 정적 메서드")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singletonObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tsingletonObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" singletonObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("만약 클라이언트 측에서")]),t._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error 🤯")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// private 생성자이므로 new를 통해 인스턴스를 생성할 수 없다.")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("정리하면 싱글턴 패턴은 다음과 같은 특징을 가진다.")]),t._v(" "),a("ul",[a("li",[t._v("private 생성자를 갖는다.")]),t._v(" "),a("li",[t._v("단일 객체 참조 변수를 정적 속성으로 갖는다.")]),t._v(" "),a("li",[t._v("단일 객체 참조 변수가 참조하는 단일 객체를 반환하는 getInstance() 정적 메서드를 갖는다.")]),t._v(" "),a("li",[t._v("단일 객체는 쓰기 가능한 속성을 갖지 않는 것이 정석이다.")])]),t._v(" "),a("h3",{attrs:{id:"팩터리-메서드-패턴-factory-method-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#팩터리-메서드-패턴-factory-method-pattern"}},[t._v("#")]),t._v(" 팩터리 메서드 패턴 (Factory Method Pattern)")]),t._v(" "),a("p",[t._v("팩터리 메서드는 객체를 생성 반환하는 메서드를 말한다.")]),t._v(" "),a("h2",{attrs:{id:"출처"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#출처"}},[t._v("#")]),t._v(" 출처")]),t._v(" "),a("p",[t._v("자바스크립트 예제 출처 : "),a("a",{attrs:{href:"https://www.dofactory.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dofactory"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);